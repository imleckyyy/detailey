/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */html{font-family:Montserrat,sans-serif;font-size:10px;line-height:1.4;color:#222;padding:20px}body{font-size:1.4rem}*{box-sizing:border-box}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0;padding:0}audio,canvas,iframe,img,svg,video{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.hidden,[hidden]{display:none!important}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.sr-only.focusable:active,.sr-only.focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;white-space:inherit;width:auto}.invisible{visibility:hidden}.clearfix:after,.clearfix:before{content:" ";display:table}.clearfix:after{clear:both}@media print{*,:after,:before{background:#fff!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="#"]:after,a[href^="javascript:"]:after{content:""}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}.link--white{color:#fff}.link--white:hover{color:#9c9c9c}.link--black{color:#000}.link--black:hover{color:grey}body.overflow-off{overflow:hidden}#header{position:fixed;left:20px;top:20px;right:20px;padding:20px;color:#f1f1f1;z-index:99;display:flex;align-items:center;justify-content:space-between}#header:before{content:"";top:0;left:0;width:100%;height:100%;background:#000;background-image:url(../img/bg_mobile.jpg);background-attachment:fixed;background-position:0;background-repeat:no-repeat;background-size:cover;position:absolute;z-index:-1;opacity:0;transition:opacity .3s ease}@media (min-width:800px){#header:before{background-image:url(../img/bg.jpg)}}#header:after{content:"";top:-20px;left:0;width:100%;height:20px;background:#fff;position:absolute;opacity:0;transition:opacity .3s ease}#header.sticky:after,#header.sticky:before{opacity:1}#header #nav #nav__trigger{display:block;width:35px;height:35px;position:relative;background:transparent;border:none;outline:none;text-indent:-99999px;z-index:99;cursor:pointer}#header #nav #nav__trigger span{display:block;width:100%;height:2px;position:absolute;left:50%;transform:translateX(-50%);background:#fff;transition:all .3s ease}#header #nav #nav__trigger span:first-child{top:25%}#header #nav #nav__trigger span:nth-child(2){top:50%;opacity:1}#header #nav #nav__trigger span:nth-child(3){top:75%}#header #nav #nav__trigger:hover span:first-child{transform:translateX(-60%)}#header #nav #nav__trigger:hover span:nth-child(2){transform:translateX(-40%)}#header #nav #nav__trigger:hover span:nth-child(3){transform:translateX(-60%)}@media (min-width:800px){#header #nav #nav__trigger{display:none}}#header #nav ul{display:none;flex-direction:column;align-items:flex-start;width:calc(100% - 40px);height:calc(100% - 40px);position:fixed;left:20px;right:20px;top:20px;bottom:20px;margin:0;padding:60px 40px;background:#000;list-style-type:none}@media (min-width:800px){#header #nav ul{display:flex;flex-direction:row;width:auto;height:auto;background:unset;position:static;padding:0;margin:0}}#header #nav ul li{display:flex;width:100%;margin-bottom:20px}@media (min-width:800px){#header #nav ul li{margin:0 5px}}#header #nav ul li a{position:relative;display:block;width:100%;padding:20px 10px;font-size:2rem;color:#f1f1f1;text-decoration:none;overflow:hidden}#header #nav ul li a:before{content:"";display:block;width:100%;height:100%;background:#fff;position:absolute;left:0;top:0;transform:translateY(100%);transition:transform .3s ease;z-index:-1}#header #nav ul li a:hover{color:#000}#header #nav ul li a:hover:before{transform:translateY(0)}@media (min-width:800px){#header #nav ul li a{font-size:1.3rem;padding:8px 20px}}#header #nav.open #nav__trigger span:first-child{top:50%;transform:translate(-50%,-50%) rotate(45deg);width:130%}#header #nav.open #nav__trigger span:nth-child(2){opacity:0}#header #nav.open #nav__trigger span:nth-child(3){top:50%;transform:translate(-50%,-50%) rotate(-45deg);width:130%}#header #nav.open ul{display:flex}#header #logo img{max-height:25px;max-width:90%}.section-page{width:100%;display:flex;flex-direction:column;align-items:center;justify-content:center;padding:100px 0 0}@media (min-width:800px){.section-page{padding:100px 25px;min-height:calc(100vh - 40px)}}.section-page__wrapper{width:100%;max-width:1200px}.section-page__wrapper--full{max-width:unset}#hero-page{background:#000;color:#f1f1f1;overflow:hidden;min-height:calc(100vh - 40px);padding:20px}#hero-page,#hero-page h1{position:relative;flex-direction:column}#hero-page h1{display:flex;justify-content:center;align-items:center;text-align:center;font-weight:500;font-size:2rem;z-index:1}#hero-page h1 img{margin-bottom:10px;max-width:60vw}#hero-page p{position:relative;z-index:1;text-align:center}#hero-page #hero-bg{position:absolute;top:0;left:0;right:0;bottom:0;z-index:0;width:120%;height:120%;overflow:hidden;background-image:url(../img/bg_mobile.jpg);background-repeat:no-repeat;background-size:cover;background-position:100%}@media (min-width:800px){#hero-page #hero-bg{background-image:url(../img/bg.jpg)}}#hero-page #hero-bg-animate{position:absolute;top:0;left:0;right:0;bottom:0;z-index:0;width:100%;height:100%;overflow:hidden}p{line-height:1.6}#services{position:relative}@media (min-width:800px){#services:before{content:"";position:absolute;top:0;bottom:0;left:50%;width:50%;background:url(../img/bg.jpg);background-attachment:fixed;background-position:0;background-repeat:no-repeat;background-size:cover;z-index:-1}}#services .services_list{display:flex;flex-wrap:wrap}#services .service{width:100%;box-sizing:border-box;padding:30px;display:flex;align-items:center}@media (min-width:800px){#services .service{width:50%}#services .service:nth-child(2n){color:#f1f1f1}}#services .service__image{min-width:120px}#services .service__image img{max-width:75%;height:auto;border-radius:50%}#services .service h3{margin-top:0}#gallery .gallery-list,#our-work .gallery-list{display:flex;flex-wrap:wrap;margin:0 -2px}#gallery .gallery-list__item,#our-work .gallery-list__item{position:relative;max-width:100%;cursor:pointer;padding:2px;max-width:50%;transition:transform .3s ease}@media (min-width:800px){#gallery .gallery-list__item,#our-work .gallery-list__item{max-width:33.33333%;padding:2px}}#gallery .gallery-list__item span,#our-work .gallery-list__item span{display:flex;align-items:center;justify-content:center;background:rgba(0,0,0,.75);position:absolute;left:2px;top:2px;right:2px;bottom:2px;text-align:center;color:#fff;opacity:0;transition:opacity .3s ease;pointer-events:none}#gallery .gallery-list__item:hover span,#our-work .gallery-list__item:hover span{opacity:1}#gallery .gallery-list__item img,#our-work .gallery-list__item img{max-width:100%}.photo-lightbox{position:fixed;top:0;left:0;width:100vw;height:100vh;max-width:unset;z-index:999;display:flex;align-items:center;justify-content:center;background:#fff;-webkit-animation:fade-in .5s cubic-bezier(.39,.575,.565,1) both;animation:fade-in .5s cubic-bezier(.39,.575,.565,1) both}.photo-lightbox .photo-controlls{position:absolute;top:50px;right:50px;z-index:1000;display:flex}.photo-lightbox .photo-controlls button{position:relative;cursor:pointer;width:30px;height:30px;display:block;margin-left:10px;text-indent:-9999999px;border:0;background:#fff;outline:none}.photo-lightbox .photo-controlls button#zoom-photo:before{content:"";position:absolute;left:4px;top:4px;width:45%;height:45%;border-radius:50%;background:transparent;border:2px solid #000}.photo-lightbox .photo-controlls button#zoom-photo:after{content:"";position:absolute;left:21px;top:21px;transform:translate(-50%,-50%) rotate(45deg);width:10px;height:2px;background:#000}.photo-lightbox .photo-controlls button#zoom-photo span{position:absolute;left:9px;top:12px;background:#000;width:8px;height:2px}.photo-lightbox .photo-controlls button#zoom-photo span:before{content:"";position:absolute;left:3px;top:-3px;background:#000;width:2px;height:8px;transition:opacity .3s ease}.photo-lightbox .photo-controlls button#close-photo:after,.photo-lightbox .photo-controlls button#close-photo:before{content:"";position:absolute;left:50%;top:50%;width:100%;height:2px;background:#000}.photo-lightbox .photo-controlls button#close-photo:before{transform:translate(-50%,-50%) rotate(45deg)}.photo-lightbox .photo-controlls button#close-photo:after{transform:translate(-50%,-50%) rotate(-45deg)}.photo-lightbox .photo{position:absolute;top:20px;left:20px;right:20px;bottom:20px;overflow:auto;text-align:center}.photo-lightbox .photo::-webkit-scrollbar{width:8px;height:8px}.photo-lightbox .photo{scrollbar-width:thin;scrollbar-color:#e3e3e3 #333}.photo-lightbox .photo::-webkit-scrollbar-track{background:#e3e3e3}.photo-lightbox .photo::-webkit-scrollbar-thumb{background-color:#333;border-radius:0;border:2px solid #333}.photo-lightbox .photo img{max-width:100%;max-height:100%;cursor:zoom-in}.photo-lightbox.--zoomed img{max-height:unset;max-width:unset;cursor:zoom-out}.photo-lightbox.--zoomed #zoom-photo span:before{opacity:0}@-webkit-keyframes fade-in{0%{opacity:0}to{opacity:1}}@keyframes fade-in{0%{opacity:0}to{opacity:1}}#contact{position:relative;overflow:hidden}@media (min-width:800px){#contact{margin-bottom:20px}}#contact .section-page__wrapper{display:flex;align-items:center;flex-direction:column-reverse}@media (min-width:800px){#contact .section-page__wrapper{flex-direction:row}}@media (min-width:800px){#contact.contact--small .section-page__wrapper{flex-direction:row-reverse}}#contact.contact--small .contact-map{height:300px}#contact .contact-form{width:100%;margin-bottom:50px}@media (min-width:800px){#contact .contact-form{margin-bottom:0}}#contact .contact-form h3{margin:20px 0 5px}#contact .contact-form p{margin:0}#contact .contact-map{position:relative;width:100%;height:500px;min-width:50%;border-radius:10px;overflow:hidden;background:#fff}@media (min-width:800px){#contact .contact-map{margin-right:40px}}#contact .contact-map iframe{height:100%}#footer{display:flex;align-items:center;justify-content:flex-start;padding:20px;background-image:url(../img/bg_mobile.jpg);background-attachment:fixed;background-position:0;background-repeat:no-repeat;background-size:cover;color:#fff;flex-direction:column;margin-top:100px}@media (min-width:800px){#footer{background-image:url(../img/bg.jpg);flex-direction:row;margin-top:0}}#footer img{max-height:25px}@media (min-width:800px){#footer img{margin-right:20px}}#footer p{flex:1;margin-bottom:40px}@media (min-width:800px){#footer p{margin:0}}#footer .socials{list-style:none;display:flex;margin:0;padding:0}#footer .socials li{margin-left:15px}@media (min-width:800px){#footer .socials li{margin-left:5px}}#footer .socials a{padding:0 10px}@media (min-width:800px){#footer .socials a{padding:0 5px}}#footer .socials__icon{width:20px;height:20px}.single-work-page header h1{margin:0}.single-work-page #hero-page{min-height:60vh;background:unset}.single-work-page #hero-page h2{position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;font-weight:500;font-size:2rem;z-index:1}.single-work-page #hero-page #hero-single-page-bg{position:absolute;top:0;left:0}.single-work-page #hero-page #hero-single-page-bg:before{content:"";display:block;width:100%;height:100%;background:#000;position:absolute;opacity:.65}.single-work-page .section-page{padding:100px 0 0}@media (min-width:800px){.single-work-page .section-page{min-height:unset}}.single-work-page .photos-set{width:100%;margin:0;padding:0;display:flex;list-style-type:none}.single-work-page .photos-set__photo{max-width:50%}.single-work-page .photos-set__photo img{position:relative;max-width:calc(100% + 40px)}.single-work-page .photos-set__photo:nth-child(2){position:relative;top:40px;left:-40px}.single-work-page #contact{padding:100px 0 0}@media (min-width:800px){.single-work-page #contact{padding:100px 0}}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
