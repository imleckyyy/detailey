const backgroundAnimation = function () {
  let n,
    t,
    e,
    i,
    o,
    a,
    r = !0;
  function c(n) {
    var t = (posy = 0);
    n.pageX || n.pageY
      ? ((t = n.pageX - (document.body.scrollLeft + document.documentElement.scrollLeft)),
        (posy = n.pageY - (document.body.scrollTop + document.documentElement.scrollTop)))
      : (n.clientX || n.clientY) && ((t = n.clientX), (posy = n.clientY)),
      (a.x = t),
      (a.y = posy);
  }
  function l() {
    (n = window.innerWidth), (t = window.innerHeight), (e.width = n), (e.height = t);
  }
  function d() {
    if (r)
      for (var e in (i.clearRect(0, 0, n, t), o))
        Math.abs(v(a, o[e])) < 4e3
          ? ((o[e].active = 0.3), (o[e].circle.active = 0.6))
          : Math.abs(v(a, o[e])) < 2e4
          ? ((o[e].active = 0.1), (o[e].circle.active = 0.3))
          : Math.abs(v(a, o[e])) < 4e4
          ? ((o[e].active = 0.02), (o[e].circle.active = 0.1))
          : ((o[e].active = 0), (o[e].circle.active = 0)),
          u(o[e]),
          o[e].circle.draw();
    requestAnimationFrame(d);
  }
  function s(n) {
    TweenLite.to(n, 1 + 1 * Math.random(), {
      x: n.originX - 50 + 100 * Math.random(),
      y: n.originY - 50 + 100 * Math.random(),
      ease: Circ.easeInOut,
      onComplete: function () {
        s(n);
      },
    });
  }
  function u(n) {
    if (n.active)
      for (var t in n.closest)
        i.beginPath(),
          i.moveTo(n.x, n.y),
          i.lineTo(n.closest[t].x, n.closest[t].y),
          (i.strokeStyle = 'rgba(164,164,164,' + n.active + ')'),
          i.stroke();
  }
  function h(n, t, e) {
    var o = this;
    (o.pos = n || null),
      (o.radius = t || null),
      (o.color = e || null),
      (this.draw = function () {
        o.active &&
          (i.beginPath(),
          i.arc(o.pos.x, o.pos.y, o.radius, 0, 2 * Math.PI, !1),
          (i.fillStyle = 'rgba(164,164,164,' + o.active + ')'),
          i.fill());
      });
  }
  function v(n, t) {
    return Math.pow(n.x - t.x, 2) + Math.pow(n.y - t.y, 2);
  }
  !(function () {
    (n = window.innerWidth),
      (t = window.innerHeight),
      (a = { x: n / 2, y: t / 2 }),
      ((e = document.getElementById('hero-bg-animate')).width = n),
      (e.height = t),
      (i = e.getContext('2d')),
      (o = []);
    for (var r = 0; r < n; r += n / 10)
      for (var c = 0; c < t; c += t / 10) {
        var l = r + (Math.random() * n) / 10,
          d = c + (Math.random() * t) / 10,
          s = { x: l, originX: l, y: d, originY: d };
        o.push(s);
      }
    for (var u = 0; u < o.length; u++) {
      for (var f = [], m = o[u], g = 0; g < o.length; g++) {
        var w = o[g];
        if (m != w) {
          for (var y = !1, p = 0; p < 5; p++) y || (null == f[p] && ((f[p] = w), (y = !0)));
          for (var p = 0; p < 5; p++) y || (v(m, w) < v(m, f[p]) && ((f[p] = w), (y = !0)));
        }
      }
      m.closest = f;
    }
    for (var u in o) {
      var b = new h(o[u], 2 + 2 * Math.random(), 'rgba(0,0,0,0.2)');
      o[u].circle = b;
    }
  })(),
    (function () {
      for (var n in (d(), o)) s(o[n]);
    })(),
    (function () {
      'ontouchstart' in window || window.addEventListener('mousemove', c);
      window.addEventListener('resize', l);
    })();
};
backgroundAnimation();
